/**
 * rubico v2.5.0
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2024 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const isPromise=r=>null!=r&&"function"==typeof r.then,funcConcat=(r,n)=>function(...t){const o=r(...t);return isPromise(o)?o.then(n):n(o)},always=r=>function(){return r},thunkifyArgs=(r,n)=>function(){return r(...n)},thunkConditional=(r,n,t)=>r?n():t(),__=Symbol.for("placeholder"),curry3ResolveArg0=(r,n,t)=>function(o){return r(o,n,t)},curry3ResolveArg1=(r,n,t)=>function(o){return r(n,o,t)},curry3ResolveArg2=(r,n,t)=>function(o){return r(n,t,o)},curry3=function(r,n,t,o){return n==__?curry3ResolveArg0(r,t,o):t==__?curry3ResolveArg1(r,n,o):curry3ResolveArg2(r,n,t)},curryArgs2ResolveArgs0=(r,n,t)=>function(...t){return r(t,n)},curryArgs2ResolveArgs1=(r,n,t)=>function(...t){return r(n,t)},curryArgs2=function(r,n,t){return n==__?curryArgs2ResolveArgs0(r,t):curryArgs2ResolveArgs1(r,n)},_tap=function(r,n){const t=r[0],o=n(...r);return isPromise(o)?o.then(always(t)):t},tap=function(...r){const n=r.pop();return 0==r.length?curryArgs2(_tap,__,n):_tap(r,n)};tap.if=(r,n)=>function(...t){const o=r(...t);if(isPromise(o))return o.then(curry3(thunkConditional,__,thunkifyArgs(tap(n),t),always(t[0])));if(o){const r=n(...t);if(isPromise(r))return r.then(always(t[0]))}return t[0]};const consoleLog=console.log,trace=function(...r){const n=r[0];return"function"==typeof n?tap(funcConcat(n,consoleLog)):tap(consoleLog)(...r)};export default trace;
