/**
 * rubico v1.6.13
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2020 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const noop=function(){},isPromise=t=>null!=t&&"function"==typeof t.then,funcConcat=(t,n)=>function(...r){const e=t(...r);return isPromise(e)?e.then(n):n(e)},funcConcatSync=(t,n)=>function(...r){return n(t(...r))},objectProto=Object.prototype,nativeObjectToString=objectProto.toString,objectToString=t=>nativeObjectToString.call(t),generatorFunctionTag="[object GeneratorFunction]",isGeneratorFunction=t=>objectToString(t)==generatorFunctionTag,asyncGeneratorFunctionTag="[object AsyncGeneratorFunction]",isAsyncGeneratorFunction=t=>objectToString(t)==asyncGeneratorFunctionTag,pipe=function(t){let n=noop,r=noop;return function(...e){const o=e[0];return"function"!=typeof o||isGeneratorFunction(o)||isAsyncGeneratorFunction(o)?(n==noop&&(n=t.reduce(funcConcat)),n(...e)):(r==noop&&(r=t.reduceRight(funcConcat)),r(...e))}},pipeSync=t=>t.reduce(funcConcatSync);pipe.sync=pipeSync;const isArray=Array.isArray,promiseAll=Promise.all.bind(Promise),funcAll=t=>function(...n){const r=t.length,e=Array(r);let o=-1,i=!1;for(;++o<r;){const r=t[o](...n);isPromise(r)&&(i=!0),e[o]=r}return i?promiseAll(e):e},always=t=>function(){return t},__=Symbol.for("placeholder"),curry3ResolveArg0=(t,n,r)=>function(e){return t(e,n,r)},curry3ResolveArg1=(t,n,r)=>function(e){return t(n,e,r)},curry3ResolveArg2=(t,n,r)=>function(e){return t(n,r,e)},curry3=function(t,n,r,e){return n==__?curry3ResolveArg0(t,r,e):r==__?curry3ResolveArg1(t,n,e):curry3ResolveArg2(t,n,r)},objectSet=function(t,n,r){return t[n]=r,t},funcObjectAll=t=>function(...n){const r={},e=[];for(const o in t){const i=t[o](...n);isPromise(i)?e.push(i.then(curry3(objectSet,r,o,__))):r[o]=i}return 0==e.length?r:promiseAll(e).then(always(r))},curry4ResolveArg0=(t,n,r,e)=>function(o){return t(o,n,r,e)},curry4ResolveArg1=(t,n,r,e)=>function(o){return t(n,o,r,e)},curry4ResolveArg2=(t,n,r,e)=>function(o){return t(n,r,o,e)},curry4ResolveArg3=(t,n,r,e)=>function(o){return t(n,r,e,o)},curry4=function(t,n,r,e,o){return n==__?curry4ResolveArg0(t,r,e,o):r==__?curry4ResolveArg1(t,n,e,o):e==__?curry4ResolveArg2(t,n,r,o):curry4ResolveArg3(t,n,r,e)},asyncFuncAllSeries=async function(t,n,r,e){const o=t.length;for(;++e<o;){const o=t[e](...n);r[e]=isPromise(o)?await o:o}return r},funcAllSeries=t=>function(...n){const r=t.length,e=[];let o=-1;for(;++o<r;){const r=t[o](...n);if(isPromise(r))return r.then(funcConcat(curry3(objectSet,e,o,__),curry4(asyncFuncAllSeries,t,n,__,o)));e[o]=r}return e},fork=t=>isArray(t)?funcAll(t):funcObjectAll(t);fork.series=t=>isArray(t)?funcAllSeries(t):funcObjectAll(t);const objectAssign=Object.assign,assign=function(t){const n=funcObjectAll(t);return function(t){const r=n(t);return isPromise(r)?r.then(curry3(objectAssign,{},t,__)):{...t,...r}}},tapSync=t=>function(...n){return t(...n),n[0]},thunkifyArgs=(t,n)=>function(){return t(...n)},thunkConditional=(t,n,r)=>t?n():r(),tap=t=>function(...n){const r=n[0],e=t(...n);return isPromise(e)?e.then(always(r)):r};tap.sync=tapSync,tap.if=(t,n)=>function(...r){const e=t(...r);if(isPromise(e))return e.then(curry3(thunkConditional,__,thunkifyArgs(tap(n),r),always(r[0])));if(e){const t=n(...r);if(isPromise(t))return t.then(always(r[0]))}return r[0]};const catcherApply=function(t,n,r){return t(n,...r)},tryCatch=(t,n)=>function(...r){try{const e=t(...r);return isPromise(e)?e.catch(curry3(catcherApply,n,__,r)):e}catch(t){return n(t,...r)}},thunkify3=(t,n,r,e)=>function(){return t(n,r,e)},funcConditional=function(t,n,r){const e=t.length-1;for(;(r+=2)<e;){const e=t[r],o=t[r+1],i=e(...n);if(isPromise(i))return i.then(curry3(thunkConditional,__,thunkifyArgs(o,n),thunkify3(funcConditional,t,n,r)));if(i)return o(...n)}return t[r](...n)},switchCase=t=>function(...n){return funcConditional(t,n,-2)},symbolIterator=Symbol.iterator,MappingIterator=(t,n)=>({toString:()=>"[object MappingIterator]",[symbolIterator](){return this},next(){const r=t.next();return r.done?r:{value:n(r.value),done:!1}}}),NextIteration=t=>({value:t,done:!1}),symbolAsyncIterator=Symbol.asyncIterator,MappingAsyncIterator=(t,n)=>({[symbolAsyncIterator](){return this},async next(){const r=await t.next();if(r.done)return r;const e=n(r.value);return isPromise(e)?e.then(NextIteration):{value:e,done:!1}}}),isObject=t=>{if(null==t)return!1;const n=typeof t;return"object"==n||"function"==n},arrayMap=function(t,n){const r=t.length,e=Array(r);let o=-1,i=!1;for(;++o<r;){const r=n(t[o]);isPromise(r)&&(i=!0),e[o]=r}return i?promiseAll(e):e},generatorFunctionMap=(t,n)=>function*(...r){for(const e of t(...r))yield n(e)},asyncGeneratorFunctionMap=function(t,n){return async function*(...r){for await(const e of t(...r))yield n(e)}},curry2ResolveArg0=(t,n)=>function(r){return t(r,n)},curry2ResolveArg1=(t,n)=>function(r){return t(n,r)},curry2=function(t,n,r){return n==__?curry2ResolveArg0(t,r):curry2ResolveArg1(t,n)},reducerMap=(t,n)=>function(r,e){const o=n(e);return isPromise(o)?o.then(curry2(t,r,__)):t(r,o)},callPropUnary=(t,n,r)=>t[n](r),stringMap=function(t,n){const r=arrayMap(t,n);return isPromise(r)?r.then(curry3(callPropUnary,__,"join","")):r.join("")},setMap=function(t,n){const r=new Set,e=[];for(const o of t){const t=n(o);isPromise(t)?e.push(t.then(curry3(callPropUnary,r,"add",__))):r.add(t)}return 0==e.length?r:promiseAll(e).then(always(r))},callPropBinary=(t,n,r,e)=>t[n](r,e),mapMap=function(t,n){const r=new Map,e=[];for(const[o,i]of t){const t=n(i);isPromise(t)?e.push(t.then(curry4(callPropBinary,r,"set",o,__))):r.set(o,t)}return 0==e.length?r:promiseAll(e).then(always(r))},promiseObjectAllExecutor=t=>function(n){const r={};let e=0;for(const o in t){const i=t[o];isPromise(i)?(e+=1,i.then((t=>function(o){r[t]=o,e-=1,0==e&&n(r)})(o))):r[o]=i}0==e&&n(r)},promiseObjectAll=t=>new Promise(promiseObjectAllExecutor(t)),objectMap=function(t,n){const r={};let e=!1;for(const o in t){const i=n(t[o]);isPromise(i)&&(e=!0),r[o]=i}return e?promiseObjectAll(r):r},arrayMapSeriesAsync=async function(t,n,r,e){const o=t.length;for(;++e<o;){const o=n(t[e]);r[e]=isPromise(o)?await o:o}return r},arrayMapSeries=function(t,n){const r=t.length,e=Array(r);let o=-1;for(;++o<r;){const r=n(t[o]);if(isPromise(r))return r.then(funcConcat(curry3(objectSet,e,o,__),curry4(arrayMapSeriesAsync,t,n,__,o)));e[o]=r}return e},promiseRace=Promise.race.bind(Promise),arrayMapPoolAsync=async function(t,n,r,e,o,i){const c=t.length;for(;++o<c;){i.size>=r&&await promiseRace(i);const c=n(t[o]);if(isPromise(c)){const t=c.then(tapSync((()=>i.delete(t))));i.add(t),e[o]=t}else e[o]=c}return promiseAll(e)},arrayMapPool=function(t,n,r){const e=t.length,o=Array(e);let i=-1;for(;++i<e;){const e=n(t[i]);if(isPromise(e)){const c=new Set,s=e.then(tapSync((()=>c.delete(s))));return c.add(s),o[i]=s,arrayMapPoolAsync(t,n,r,o,i,c)}o[i]=e}return o},arrayMapWithIndex=function(t,n){const r=t.length,e=Array(r);let o=-1,i=!1;for(;++o<r;){const r=n(t[o],o,t);isPromise(r)&&(i=!0),e[o]=r}return i?promiseAll(e):e},hasOwnProperty=Object.prototype.hasOwnProperty,hasOwn=(t,n)=>hasOwnProperty.call(t,n),objectMapOwn=function(t,n){const r={};let e=!1;for(const o in t)if(hasOwn(t,o)){const i=n(t[o]);isPromise(i)&&(e=!0),r[o]=i}return e?promiseObjectAll(r):r},_curryArity=(t,n,r)=>function(...e){const o=r.length,i=e.length,c=[];let s=-1,a=-1,u=0;for(;++s<o;){const o=r[s];if(o==__&&(a+=1)<i){const t=e[a];t==__&&(u+=1),c.push(t)}else c.push(o);if(c.length==t)return 0==u?n(...c):curryArity(t,n,c)}for(;++a<i;){const r=e[a];if(r==__&&(u+=1),c.push(r),c.length==t)return 0==u?n(...c):curryArity(t,n,c)}return curryArity(t,n,c)},curryArity=function(t,n,r){const e=r.length;if(e<t)return _curryArity(t,n,r);let o=-1;for(;++o<e;){if(r[o]==__)return _curryArity(t,n,r)}return n(...r)},spread2=t=>function([n,r]){return t(n,r)},objectMapEntries=function(t,n){const r={},e=[];for(const o in t){const i=n([o,t[o]]);isPromise(i)?e.push(i.then(spread2(curryArity(3,objectSet,[r])))):r[i[0]]=i[1]}return 0==e.length?r:promiseAll(e).then(always(r))},mapSet=function(t,n,r){return t.set(n,r)},mapMapEntriesForEachCallback=(t,n,r)=>function(e,o){const i=t([o,e]);isPromise(i)?r.push(i.then(spread2(curryArity(3,mapSet,[n])))):n.set(i[0],i[1])},mapMapEntries=function(t,n){const r=new Map,e=[];return t.forEach(mapMapEntriesForEachCallback(n,r,e)),0==e.length?r:promiseAll(e).then(always(r))},map=t=>function(n){return isArray(n)?arrayMap(n,t):"function"==typeof n?isGeneratorFunction(n)?generatorFunctionMap(n,t):isAsyncGeneratorFunction(n)?asyncGeneratorFunctionMap(n,t):reducerMap(n,t):null==n?n:"function"==typeof n.then?n.then(t):"function"==typeof n.map?n.map(t):"function"==typeof n.next?symbolIterator in n?MappingIterator(n,t):MappingAsyncIterator(n,t):"string"==typeof n||n.constructor==String?stringMap(n,t):n.constructor==Set?setMap(n,t):n.constructor==Map?mapMap(n,t):n.constructor==Object?objectMap(n,t):t(n)};map.entries=function(t){return function(n){if(null==n)throw new TypeError("value is not an Object or Map");if(n.constructor==Object)return objectMapEntries(n,t);if(n.constructor==Map)return mapMapEntries(n,t);throw new TypeError("value is not an Object or Map")}},map.series=t=>function(n){if(isArray(n))return arrayMapSeries(n,t);throw new TypeError(n+" is not an Array")},map.pool=(t,n)=>function(r){if(isArray(r))return arrayMapPool(r,n,t);throw new TypeError(r+" is not an Array")},map.withIndex=t=>function(n){if(isArray(n))return arrayMapWithIndex(n,t);throw new TypeError(n+" is not an Array")},map.own=t=>function(n){if(isObject(n)&&!isArray(n))return objectMapOwn(n,t);throw new TypeError(n+" is not an Object")};const FilteringIterator=(t,n)=>({[symbolIterator](){return this},next(){let r=t.next();for(;!r.done;){const{value:e}=r;if(n(e))return{value:e,done:!1};r=t.next()}return r}}),FilteringAsyncIterator=(t,n)=>({[symbolAsyncIterator](){return this},async next(){let r=await t.next();for(;!r.done;){const{value:e}=r,o=n(e);if(isPromise(o)?await o:o)return{value:e,done:!1};r=await t.next()}return r}}),arrayExtendMap=function(t,n,r,e){const o=n.length;let i=t.length-1;for(;++e<o;)t[++i]=r(n[e]);return t},arrayFilterByConditions=function(t,n,r,e){const o=t.length;let i=-1;for(;++r<o;)e[++i]&&n.push(t[r]);return n},arrayFilter=function(t,n){const r=t.length,e=[];let o=-1,i=-1;for(;++o<r;){const r=t[o],c=n(r);if(isPromise(c))return promiseAll(arrayExtendMap([c],t,n,o)).then(curry4(arrayFilterByConditions,t,e,o-1,__));c&&(e[++i]=r)}return e},generatorFunctionFilter=(t,n)=>function*(...r){yield*FilteringIterator(t(...r),n)},asyncGeneratorFunctionFilter=(t,n)=>async function*(...r){yield*FilteringAsyncIterator(t(...r),n)},thunkify2=(t,n,r)=>function(){return t(n,r)},reducerFilter=(t,n)=>function(r,e){const o=n(e);return isPromise(o)?o.then(curry3(thunkConditional,__,(i=t,c=r,s=e,function(){return i(c,s)}),always(r))):o?t(r,e):r;var i,c,s},stringFilter=function(t,n){const r=arrayFilter(t,n);return isPromise(r)?r.then(curry3(callPropUnary,__,"join","")):r.join("")},thunkify1=(t,n)=>function(){return t(n)},setFilter=function(t,n){const r=new Set,e=r.add.bind(r),o=[];for(const i of t){const t=n(i);isPromise(t)?o.push(t.then(curry3(thunkConditional,__,thunkify1(e,i),noop))):t&&r.add(i)}return 0==o.length?r:promiseAll(o).then(always(r))},thunkify4=(t,n,r,e,o)=>function(){return t(n,r,e,o)},mapFilter=function(t,n){const r=new Map,e=[];for(const[o,i]of t){const t=n(i);isPromise(t)?e.push(t.then(curry3(thunkConditional,__,thunkify4(callPropBinary,r,"set",o,i),noop))):t&&r.set(o,i)}return 0==e.length?r:promiseAll(e).then(always(r))},objectSetIf=function(t,n,r,e){e&&(t[n]=r)},objectFilter=function(t,n){const r={},e=[];for(const o in t){const i=t[o],c=n(i);isPromise(c)?e.push(c.then(curry4(objectSetIf,r,o,t[o],__))):c&&(r[o]=i)}return 0==e.length?r:promiseAll(e).then(always(r))},arrayExtendMapWithIndex=function(t,n,r,e){const o=n.length;let i=t.length-1;for(;++e<o;)t[++i]=r(n[e],e,n);return t},arrayFilterWithIndex=function(t,n){const r=t.length,e=[];let o=-1,i=-1;for(;++o<r;){const r=t[o],c=n(r,o,t);if(isPromise(c))return promiseAll(arrayExtendMapWithIndex([c],t,n,o)).then(curry4(arrayFilterByConditions,t,e,o-1,__));c&&(e[++i]=r)}return e},filter=t=>function(n){return isArray(n)?arrayFilter(n,t):"function"==typeof n?isGeneratorFunction(n)?generatorFunctionFilter(n,t):isAsyncGeneratorFunction(n)?asyncGeneratorFunctionFilter(n,t):reducerFilter(n,t):null==n?n:"function"==typeof n.next?symbolIterator in n?FilteringIterator(n,t):FilteringAsyncIterator(n,t):"string"==typeof n||n.constructor==String?stringFilter(n,t):n.constructor==Set?setFilter(n,t):n.constructor==Map?mapFilter(n,t):"function"==typeof n.filter?n.filter(t):n.constructor==Object?objectFilter(n,t):n};filter.withIndex=t=>function(n){if(isArray(n))return arrayFilterWithIndex(n,t);throw new TypeError(n+" is not an Array")};const curryArgs3ResolveArgs0=(t,n,r)=>function(...e){return t(e,n,r)},curryArgs3ResolveArgs1=(t,n,r)=>function(...e){return t(n,e,r)},curryArgs3ResolveArgs2=(t,n,r)=>function(...e){return t(n,r,e)},curryArgs3=function(t,n,r,e){return n==__?curryArgs3ResolveArgs0(t,r,e):r==__?curryArgs3ResolveArgs1(t,n,e):curryArgs3ResolveArgs2(t,n,r)},objectValues=Object.values,iteratorReduceAsync=async function(t,n,r){let e=t.next();if(e.done)return r;for(;!e.done;)r=n(r,e.value),isPromise(r)&&(r=await r),e=t.next();return r},iteratorReduce=function(t,n,r){let e=t.next();if(e.done)return r;for(void 0===r&&(r=e.value,e=t.next());!e.done;){if(r=n(r,e.value),isPromise(r))return r.then(curry3(iteratorReduceAsync,t,n,__));e=t.next()}return r},asyncIteratorReduce=async function(t,n,r){let e=await t.next();if(e.done)return r;for(void 0===r&&(r=e.value,e=await t.next());!e.done;)r=await n(r,e.value),e=await t.next();return r},arrayReduceAsync=async function(t,n,r,e){const o=t.length;for(;++e<o;)r=n(r,t[e]),isPromise(r)&&(r=await r);return r},arrayReduce=function(t,n,r){const e=t.length;let o=-1;for(void 0===r&&(r=t[++o]);++o<e;)if(r=n(r,t[o]),isPromise(r))return r.then(curry4(arrayReduceAsync,t,n,__,o));return r},generatorFunctionReduce=(t,n,r)=>funcConcatSync(t,curry3(iteratorReduce,__,n,r)),asyncGeneratorFunctionReduce=(t,n,r)=>funcConcatSync(t,curry3(asyncIteratorReduce,__,n,r)),reducerConcat=(t,n)=>function(r,e){const o=t(r,e);return isPromise(o)?o.then(curry2(n,__,e)):n(o,e)},genericReduce=function(t,n,r){const e=t[0];return isArray(e)?arrayReduce(e,n,r):"function"==typeof e?isGeneratorFunction(e)?generatorFunctionReduce(e,n,r):isAsyncGeneratorFunction(e)?asyncGeneratorFunctionReduce(e,n,r):curryArgs3(genericReduce,__,1==t.length?reducerConcat(n,e):t.reduce(reducerConcat,n),r):null==e?void 0===r?curry2(n,e,__):n(r,e):"function"==typeof e[symbolIterator]?iteratorReduce(e[symbolIterator](),n,r):"function"==typeof e[symbolAsyncIterator]?asyncIteratorReduce(e[symbolAsyncIterator](),n,r):"function"==typeof e.reduce?e.reduce(n,r):"function"==typeof e.chain?e.chain(curry2(n,r,__)):"function"==typeof e.flatMap?e.flatMap(curry2(n,r,__)):e.constructor==Object?arrayReduce(objectValues(e),n,r):void 0===r?curry2(n,e,__):n(r,e)},reduce=function(t,n){return"function"==typeof n?function(...r){const e=n(...r);return isPromise(e)?e.then(curry3(genericReduce,r,t,__)):genericReduce(r,t,e)}:curryArgs3(genericReduce,__,t,n)},isBinary=ArrayBuffer.isView,add=(t,n)=>t+n,isArrayLike=function(t){return null!=t&&t.length>0},_arrayExtend=function(t,n){const r=t.length,e=n.length;let o=-1;for(;++o<e;)t[r+o]=n[o];return t},arrayExtend=function(t,n){return null!=(r=n)&&r.length>0?_arrayExtend(t,n):(t.push(n),t);var r},globalThisHasBuffer="function"==typeof Buffer,bufferAlloc=globalThisHasBuffer?Buffer.alloc:noop,_binaryExtend=function(t,n){const r=t.length,e=globalThisHasBuffer&&t.constructor==Buffer?bufferAlloc(r+n.length):new t.constructor(r+n.length);return e.set(t),e.set(n,r),e},binaryExtend=function(t,n){return isArray(n)||isBinary(n)?_binaryExtend(t,n):_binaryExtend(t,[n])},isNodeReadStream=t=>null!=t&&"function"==typeof t.pipe,__streamWrite=t=>function(n,r,e){return t.write(n,r,e),t},_streamExtendExecutor=(t,n)=>function(r,e){n.on("data",__streamWrite(t)),n.on("end",thunkify1(r,t)),n.on("error",e)},_streamExtend=(t,n)=>new Promise(_streamExtendExecutor(t,n)),streamExtend=function(t,n){return null!=(r=n)&&"function"==typeof r.pipe?_streamExtend(t,n):(t.write(n),t);var r},setExtend=function(t,n){if(null!=n&&n.constructor==Set){for(const r of n)t.add(r);return t}return t.add(n)},callConcat=function(t,n){return t.concat(n)},identityTransform=function(t,n,r){const e=genericReduce(t,n(noop),null);return isPromise(e)?e.then(always(r)):r},genericTransform=function(t,n,r){if(isArray(r))return genericReduce(t,n(arrayExtend),r);if(isBinary(r)){const e=genericReduce(t,n(arrayExtend),[]);return isPromise(e)?e.then(curry2(binaryExtend,r,__)):binaryExtend(r,e)}if(null==r)return identityTransform(t,n,r);const e=r.constructor;return"string"==typeof r||e==String?genericReduce(t,n(add),r):"function"==typeof r.concat?genericReduce(t,n(callConcat),r):"function"==typeof r.write?genericReduce(t,n(streamExtend),r):e==Set?genericReduce(t,n(setExtend),r):e==Object?genericReduce(t,n(objectAssign),r):identityTransform(t,n,r)},transform=function(t,n){return"function"==typeof n?function(...r){const e=n(...r);return isPromise(e)?e.then(curry3(genericTransform,r,t,__)):genericTransform(r,t,e)}:function(...r){return genericTransform(r,t,n)}},arrayPush=function(t,n){return t.push(n),t},FlatMappingIterator=function(t,n){let r=[],e=0;return{[symbolIterator](){return this},next(){if(e<r.length){const t=r[e];return e+=1,{value:t,done:!1}}const o=t.next();if(o.done)return o;const i=genericReduce([n(o.value)],arrayPush,[]);return i.length>1&&(r=i,e=1),{value:i[0],done:!1}}}},FlatMappingAsyncIterator=function(t,n){const r=[],e=new Set;let o=0;return{[symbolAsyncIterator](){return this},toString:()=>"[object FlatMappingAsyncIterator]",async next(){if(o<r.length){const t=r[o];return delete r[o],o+=1,{value:t,done:!1}}const i=await t.next();if(i.done)return 0==e.size?i:(await promiseRace(e),this.next());let c=n(i.value);isPromise(c)&&(c=await c);const s=genericReduce([c],arrayPush,r);if(isPromise(s)){const t=s.then((()=>e.delete(t)));e.add(t)}return this.next()}}},getArg1=(t,n)=>n,identity=t=>t,asyncIteratorForEach=async function(t,n){const r=[];for await(const e of t){const t=n(e);isPromise(t)&&r.push(t)}return 0==r.length?t:promiseAll(r).then(always(t))},arrayFlatten=function(t){const n=t.length,r=[],e=[];let o=-1;for(;++o<n;){const n=t[o];if(isArray(n)){const t=n.length;let r=-1;for(;++r<t;)e.push(n[r])}else if(null==n)e.push(n);else if("function"==typeof n.then)r.push(n.then(curry2(arrayPush,e,__)));else if("function"==typeof n[symbolIterator])for(const t of n)e.push(t);else if("function"==typeof n[symbolAsyncIterator])r.push(asyncIteratorForEach(n[symbolAsyncIterator](),curry2(arrayPush,e,__)));else if("function"==typeof n.chain){const t=n.chain(identity);isPromise(t)?r.push(t.then(curry2(arrayPush,e,__))):e.push(t)}else if("function"==typeof n.flatMap){const t=n.flatMap(identity);isPromise(t)?r.push(t.then(curry2(arrayPush,e,__))):e.push(t)}else if("function"==typeof n.reduce){const t=n.reduce(funcConcatSync(getArg1,curry2(arrayPush,e,__)),null);isPromise(t)&&r.push(t)}else if(n.constructor==Object)for(const t in n)e.push(n[t]);else e.push(n)}return 0==r.length?e:promiseAll(r).then(always(e))},arrayFlatMap=function(t,n){const r=arrayMap(t,n);return isPromise(r)?r.then(arrayFlatten):arrayFlatten(r)},objectFlatten=function(t){const n=[],r={},e=curry2(objectAssign,r,__),o=funcConcatSync(getArg1,e);for(const i in t){const c=t[i];if(null!=c)if("function"==typeof c[symbolIterator])for(const t of c)objectAssign(r,t);else if("function"==typeof c[symbolAsyncIterator])n.push(asyncIteratorForEach(c[symbolAsyncIterator](),e));else if("function"==typeof c.chain){const t=c.chain(identity);isPromise(t)?n.push(t.then(e)):objectAssign(r,t)}else if("function"==typeof c.flatMap){const t=c.flatMap(identity);isPromise(t)?n.push(t.then(e)):e(t)}else if("function"==typeof c.reduce){const t=c.reduce(o,null);isPromise(t)&&n.push(t)}else objectAssign(r,c)}return 0==n.length?r:promiseAll(n).then((()=>r))},objectFlatMap=function(t,n){const r=objectMap(t,n);return isPromise(r)?r.then(objectFlatten):objectFlatten(r)},setFlatten=function(t){t.size;const n=[],r=new Set,e=(t,n)=>r.add(n),o=curry3(callPropUnary,r,"add",__);for(const i of t)if(isArray(i)){const t=i.length;let n=-1;for(;++n<t;)r.add(i[n])}else if(null==i)r.add(i);else if("function"==typeof i[symbolIterator])for(const t of i)r.add(t);else if("function"==typeof i[symbolAsyncIterator])n.push(asyncIteratorForEach(i[symbolAsyncIterator](),o));else if("function"==typeof i.chain){const t=i.chain(identity);isPromise(t)?n.push(t.then(o)):r.add(t)}else if("function"==typeof i.flatMap){const t=i.flatMap(identity);isPromise(t)?n.push(t.then(o)):r.add(t)}else if("function"==typeof i.reduce){const t=i.reduce(e,null);isPromise(t)&&n.push(t)}else if(i.constructor==Object)for(const t in i)r.add(i[t]);else r.add(i);return 0==n.length?r:promiseAll(n).then((()=>r))},setFlatMap=function(t,n){const r=setMap(t,n);return isPromise(r)?r.then(setFlatten):setFlatten(r)},arrayJoin=(t,n)=>t.join(n),arrayFlattenToString=funcConcat(arrayFlatten,curry2(arrayJoin,__,"")),stringFlatMap=function(t,n){const r=arrayMap(t,n);return isPromise(r)?r.then(arrayFlattenToString):arrayFlattenToString(r)},streamWrite=function(t,n,r,e){return t.write(n,r,e),t},streamFlatExtend=async function(t,n){const r=curry2(streamWrite,t,__),e=funcConcatSync(getArg1,r),o=[];if(isArray(n)){const r=n.length;let e=-1;for(;++e<r;)t.write(n[e])}else if(null==n)t.write(n);else if("function"==typeof n[symbolIterator])for(const r of n)t.write(r);else if("function"==typeof n[symbolAsyncIterator])o.push(asyncIteratorForEach(n[symbolAsyncIterator](),r));else if("function"==typeof n.chain){const e=n.chain(identity);isPromise(e)?o.push(e.then(r)):t.write(e)}else if("function"==typeof n.flatMap){const e=n.flatMap(identity);isPromise(e)?o.push(e.then(r)):t.write(e)}else if("function"==typeof n.reduce){const t=n.reduce(e,null);isPromise(t)&&o.push(t)}else if(n.constructor==Object)for(const r in n)t.write(n[r]);else t.write(n);return 0==o.length?t:promiseAll(o).then(always(t))},streamFlatMap=async function(t,n){const r=new Set;for await(const e of t){const o=n(e);if(isPromise(o)){const n=o.then(curry2(streamFlatExtend,t,__)).then((()=>r.delete(n)));r.add(n)}else{const n=streamFlatExtend(t,o);if(isPromise(n)){const t=n.then((()=>r.delete(t)));r.add(t)}}}return await promiseAll(r),t},arrayJoinToBinary=function(t,n){const r=t.length;let e=-1,o=n;for(;++e<r;)o=binaryExtend(o,t[e]);return o},arrayFlattenToBinary=function(t,n){const r=arrayFlatten(t);return isPromise(r)?r.then(curry2(arrayJoinToBinary,__,n)):arrayJoinToBinary(r,n)},binaryFlatMap=function(t,n){const r=arrayMap(t,n),e=globalThisHasBuffer&&t.constructor==Buffer?bufferAlloc(0):new t.constructor(0);return isPromise(r)?r.then(curry2(arrayFlattenToBinary,__,e)):arrayFlattenToBinary(r,e)},reducerFlatMap=(t,n)=>function(r,e){const o=n(e);return isPromise(o)?o.then(curryArgs3(genericReduce,__,t,r)):genericReduce([o],t,r)},generatorFunctionFlatMap=(t,n)=>function*(...r){yield*FlatMappingIterator(t(...r),n)},asyncGeneratorFunctionFlatMap=(t,n)=>async function*(...r){yield*FlatMappingAsyncIterator(t(...r),n)},flatMap=t=>function(n){if(isArray(n))return arrayFlatMap(n,t);if("function"==typeof n)return isGeneratorFunction(n)?generatorFunctionFlatMap(n,t):isAsyncGeneratorFunction(n)?asyncGeneratorFunctionFlatMap(n,t):reducerFlatMap(n,t);if(isBinary(n))return binaryFlatMap(n,t);if(null==n)return t(n);if("function"==typeof n.then)return n.then(t);if("function"==typeof n.next)return symbolIterator in n?FlatMappingIterator(n,t):FlatMappingAsyncIterator(n,t);if("function"==typeof n.chain)return n.chain(t);if("function"==typeof n.flatMap)return n.flatMap(t);if("function"==typeof n[symbolAsyncIterator]&&"function"==typeof n.write)return streamFlatMap(n,t);const r=n.constructor;return r==Object?objectFlatMap(n,t):r==Set?setFlatMap(n,t):"string"==typeof n||r==String?stringFlatMap(n,t):t(n)},SelfReferencingPromise=function(t){const n=t.then((t=>[t,n]));return n},asyncArrayAny=async function(t,n,r,e){const o=t.length;for(;++r<o;){const o=n(t[r]);if(isPromise(o))e.add(SelfReferencingPromise(o));else if(o)return!0}for(;e.size>0;){const[t,n]=await promiseRace(e);if(e.delete(n),t)return!0}return!1},arrayAny=function(t,n){const r=t.length;let e=-1;for(;++e<r;){const r=n(t[e]);if(isPromise(r))return asyncArrayAny(t,n,e,new Set([SelfReferencingPromise(r)]));if(r)return!0}return!1},asyncIteratorAny=async function(t,n,r,e=20){let o=t.next();for(isPromise(o)&&(o=await o);!o.done;){if(r.size>=e){const[t,n]=await promiseRace(r);if(r.delete(n),t)return!0}const i=n(o.value);if(isPromise(i))r.add(SelfReferencingPromise(i));else if(i)return!0;o=t.next(),isPromise(o)&&(o=await o)}for(;r.size>0;){const[t,n]=await promiseRace(r);if(r.delete(n),t)return!0}return!1},iteratorAny=function(t,n){for(const r of t){const e=n(r);if(isPromise(e))return asyncIteratorAny(t,n,new Set([SelfReferencingPromise(e)]));if(e)return!0}return!1},reducerAnySync=t=>function(n,r){return!!n||t(r)},reducerAny=t=>function(n,r){return!0===n?n:isPromise(n)?n.then(curry2(reducerAnySync(t),__,r)):!!n||t(r)},any=t=>function(n){return isArray(n)?arrayAny(n,t):null==n?t(n):"function"==typeof n[symbolIterator]?iteratorAny(n[symbolIterator](),t):"function"==typeof n[symbolAsyncIterator]?asyncIteratorAny(n[symbolAsyncIterator](),t,new Set):"function"==typeof n.reduce?n.reduce(reducerAny(t),!1):n.constructor==Object?arrayAny(objectValues(n),t):t(n)},arrayAll=function(t,n){const r=t.length,e=[];let o=-1;for(;++o<r;){const r=n(t[o]);if(isPromise(r))e.push(r);else if(!r)return!1}return 0==e.length||promiseAll(e).then(curry3(callPropUnary,__,"every",Boolean))},iteratorAll=function(t,n){const r=[];for(const e of t){const t=n(e);if(isPromise(t))r.push(t);else if(!t)return!1}return 0==r.length||promiseAll(r).then(curry3(callPropUnary,__,"every",Boolean))},asyncIteratorAll=async function(t,n,r,e=20){let o=await t.next();for(;!o.done;){if(r.size>=e){const[t,n]=await promiseRace(r);if(r.delete(n),!t)return!1}const i=n(o.value);if(isPromise(i))r.add(SelfReferencingPromise(i));else if(!i)return!1;o=await t.next()}for(;r.size>0;){const[t,n]=await promiseRace(r);if(r.delete(n),!t)return!1}return!0},reducerAllSync=(t,n,r)=>!!n&&t(r),reducerAll=t=>function(n,r){return!1!==n&&(isPromise(n)?n.then(curry3(reducerAllSync,t,__,r)):!!n&&t(r))},all=t=>function(n){return isArray(n)?arrayAll(n,t):null==n?t(n):"function"==typeof n[symbolIterator]?iteratorAll(n[symbolIterator](),t):"function"==typeof n[symbolAsyncIterator]?asyncIteratorAll(n[symbolAsyncIterator](),t,new Set):"function"==typeof n.reduce?n.reduce(reducerAll(t),!0):n.constructor==Object?arrayAll(objectValues(n),t):t(n)},asyncAnd=async function(t,n,r){const e=t.length;for(;++r<e;){let e=t[r](n);if(isPromise(e)&&(e=await e),!e)return!1}return!0},and=t=>function(n){if(null!=n&&"function"==typeof n.and)return n.and(t);const r=t.length;let e=-1;for(;++e<r;){const r=t[e](n);if(isPromise(r))return r.then(curry3(thunkConditional,__,thunkify3(asyncAnd,t,n,e),always(!1)));if(!r)return!1}return!0},asyncOr=async function(t,n){const r=t.length;let e=-1;for(;++e<r;){let r=t[e](n);if(isPromise(r)&&(r=await r),r)return!0}return!1},_asyncOrInterlude=(t,n,r)=>!!r||asyncOr(t,n),or=t=>function(n){if(null!=n&&"function"==typeof n.or)return n.or(t);const r=t.length;let e=-1;for(;++e<r;){const r=t[e](n);if(isPromise(r))return r.then(curry3(_asyncOrInterlude,t,n,__));if(r)return!0}return!1},_not=t=>!t,not=t=>function(n){if(null!=n&&"function"==typeof n.not)return n.not(t);const r=t(n);return isPromise(r)?r.then(_not):!r},notSync=t=>function(...n){return!t(...n)};not.sync=notSync;const sameValueZero=function(t,n){return t===n||t!=t&&n!=n},eq=function(t,n){const r="function"==typeof t,e="function"==typeof n;return r&&e?function(r){const e=t(r),o=n(r),i=isPromise(e),c=isPromise(o);return i&&c?promiseAll([e,o]).then(spread2(sameValueZero)):i?e.then(curry2(sameValueZero,__,o)):c?o.then(curry2(sameValueZero,e,__)):sameValueZero(e,o)}:r?function(r){const e=t(r);return isPromise(e)?e.then(curry2(sameValueZero,__,n)):sameValueZero(e,n)}:e?function(r){const e=n(r);return isPromise(e)?e.then(curry2(sameValueZero,t,__)):sameValueZero(t,e)}:function(r){return null!=r&&"function"==typeof r.eq?r.eq(t,n):sameValueZero(t,n)}},greaterThan=(t,n)=>t>n,gt=function(t,n){const r="function"==typeof t,e="function"==typeof n;return r&&e?function(r){const e=t(r),o=n(r),i=isPromise(e),c=isPromise(o);return i&&c?promiseAll([e,o]).then(spread2(greaterThan)):i?e.then(curry2(greaterThan,__,o)):c?o.then(curry2(greaterThan,e,__)):e>o}:r?function(r){const e=t(r);return isPromise(e)?e.then(curry2(greaterThan,__,n)):e>n}:e?function(r){const e=n(r);return isPromise(e)?e.then(curry2(greaterThan,t,__)):t>e}:function(r){return null!=r&&"function"==typeof r.eq?r.gt(t,n):t>n}},lessThan=(t,n)=>t<n,lt=function(t,n){const r="function"==typeof t,e="function"==typeof n;return r&&e?function(r){const e=t(r),o=n(r),i=isPromise(e),c=isPromise(o);return i&&c?promiseAll([e,o]).then(spread2(lessThan)):i?e.then(curry2(lessThan,__,o)):c?o.then(curry2(lessThan,e,__)):e<o}:r?function(r){const e=t(r);return isPromise(e)?e.then(curry2(lessThan,__,n)):e<n}:e?function(r){const e=n(r);return isPromise(e)?e.then(curry2(lessThan,t,__)):t<e}:function(r){return null!=r&&"function"==typeof r.eq?r.lt(t,n):t<n}},greaterThanOrEqual=(t,n)=>t>=n,gte=function(t,n){const r="function"==typeof t,e="function"==typeof n;return r&&e?function(r){const e=t(r),o=n(r),i=isPromise(e),c=isPromise(o);return i&&c?promiseAll([e,o]).then(spread2(greaterThanOrEqual)):i?e.then(curry2(greaterThanOrEqual,__,o)):c?o.then(curry2(greaterThanOrEqual,e,__)):e>=o}:r?function(r){const e=t(r);return isPromise(e)?e.then(curry2(greaterThanOrEqual,__,n)):e>=n}:e?function(r){const e=n(r);return isPromise(e)?e.then(curry2(greaterThanOrEqual,t,__)):t>=e}:function(r){return null!=r&&"function"==typeof r.eq?r.gte(t,n):t>=n}},lessThanOrEqual=(t,n)=>t<=n,lte=function(t,n){const r="function"==typeof t,e="function"==typeof n;return r&&e?function(r){const e=t(r),o=n(r),i=isPromise(e),c=isPromise(o);return i&&c?promiseAll([e,o]).then(spread2(lessThanOrEqual)):i?e.then(curry2(lessThanOrEqual,__,o)):c?o.then(curry2(lessThanOrEqual,e,__)):e<=o}:r?function(r){const e=t(r);return isPromise(e)?e.then(curry2(lessThanOrEqual,__,n)):e<=n}:e?function(r){const e=n(r);return isPromise(e)?e.then(curry2(lessThanOrEqual,t,__)):t<=e}:function(r){return null!=r&&"function"==typeof r.eq?r.lte(t,n):t<=n}},memoizeCappedUnary=function(t,n){const r=new Map,e=function(e){if(r.has(e))return r.get(e);const o=t(e);return r.set(e,o),r.size>n&&r.clear(),o};return e.cache=r,e},pathDelimiters=/[.|[|\]]+/,parsePropertyPath=function(t){const n=t.length-1,r="["==t[0],e="]"==t[n];return r&&e?t.slice(1,n).split(pathDelimiters):r?t.slice(1).split(pathDelimiters):e?t.slice(0,n).split(pathDelimiters):t.split(pathDelimiters)},memoizedCappedParsePropertyPath=memoizeCappedUnary(parsePropertyPath,500),propertyPathToArray=t=>isArray(t)?t:"string"==typeof t?memoizedCappedParsePropertyPath(t):[t],getByPath=function(t,n){const r=propertyPathToArray(n),e=r.length;let o=-1,i=t;for(;++o<e;)if(i=i[r[o]],null==i)return;return i},get=(t,n)=>function(r){const e=null==r?void 0:getByPath(r,t);return void 0===e?"function"==typeof n?n(r):n:e},pick=t=>function(n){if(null==n)return n;const r=t.length,e={};let o=-1;for(;++o<r;){const r=t[o],i=n[r];null!=i&&(e[r]=i)}return e},deleteByPath=function(t,n){const r=propertyPathToArray(n),e=r.length-1;let o=-1,i=t;for(;++o<e;)if(i=i[r[o]],null==i)return;delete i[r[o]]},objectCopyDeep=function(t){const n={};for(const r in t){const e=t[r];isArray(e)?n[r]=arrayCopyDeep(e):null!=e&&e.constructor==Object?n[r]=objectCopyDeep(e):n[r]=e}return n},arrayCopyDeep=function(t){const n=t.length,r=[];let e=-1;for(;++e<n;){const n=t[e];isArray(n)?r[e]=arrayCopyDeep(n):null!=n&&n.constructor==Object?r[e]=objectCopyDeep(n):r[e]=n}return r},copyDeep=function(t){return isArray(t)?arrayCopyDeep(t):null==t?t:t.constructor==Object?objectCopyDeep(t):t},omit=t=>function(n){if(null==n)return n;const r=t.length,e=isArray(o=n)?arrayCopyDeep(o):null==o?o:o.constructor==Object?objectCopyDeep(o):o;var o;let i=-1;for(;++i<r;)deleteByPath(e,t[i]);return e},thunkify=(t,...n)=>function(){return t(...n)},curry=(t,...n)=>curryArity(t.length,t,n);curry.arity=function(t,n,...r){return curryArity(t,n,r)};const rubico={pipe:pipe,tap:tap,switchCase:switchCase,tryCatch:tryCatch,fork:fork,assign:assign,get:get,pick:pick,omit:omit,map:map,filter:filter,reduce:reduce,transform:transform,flatMap:flatMap,and:and,or:or,not:not,any:any,all:all,eq:eq,gt:gt,lt:lt,gte:gte,lte:lte,thunkify:thunkify,always:always,curry:curry,__:__};export default rubico;
