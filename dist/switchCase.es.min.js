/**
 * rubico v2.6.0
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2024 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */
const promiseAll=Promise.all.bind(Promise),isPromise=n=>null!=n&&"function"==typeof n.then,areAnyValuesPromises=function(n){const r=n.length;let t=-1;for(;++t<r;){const r=n[t];if(isPromise(r))return!0}return!1},thunkConditional=(n,r,t)=>n?r():t(),thunkifyArgs=(n,r)=>function(){return n(...r)},thunkify3=(n,r,t,o)=>function(){return n(r,t,o)},__=Symbol.for("placeholder"),curry3ResolveArg0=(n,r,t)=>function(o){return n(o,r,t)},curry3ResolveArg1=(n,r,t)=>function(o){return n(r,o,t)},curry3ResolveArg2=(n,r,t)=>function(o){return n(r,t,o)},curry3=function(n,r,t,o){return r==__?curry3ResolveArg0(n,t,o):t==__?curry3ResolveArg1(n,r,o):curry3ResolveArg2(n,r,t)},always=n=>function(){return n},arrayConditional=function(n,r,t){const o=n.length-1;for(;(t+=2)<o;){const o=n[t],e=n[t+1],u="function"==typeof o?o(...r):o;if(isPromise(u))return u.then(curry3(thunkConditional,__,"function"==typeof e?thunkifyArgs(e,r):always(e),thunkify3(arrayConditional,n,r,t)));if(u)return"function"==typeof e?e(...r):e}if(t==n.length)return;const e=n[o];return"function"==typeof e?e(...r):e},areAllValuesNonfunctions=function(n){const r=n.length;let t=-1;for(;++t<r;)if("function"==typeof n[t])return!1;return!0},thunkify2=(n,r,t)=>function(){return n(r,t)},nonfunctionsConditional=function(n,r){const t=n.length,o=t-1;for(;(r+=2)<o;){const t=n[r],o=n[r+1];if(isPromise(t))return t.then(curry3(thunkConditional,__,always(o),thunkify2(nonfunctionsConditional,n,r)));if(t)return o}if(r!=t)return n[r]},curryArgs3ResolveArgs0=(n,r,t)=>function(...o){return n(o,r,t)},curryArgs3ResolveArgs1=(n,r,t)=>function(...o){return n(r,o,t)},curryArgs3ResolveArgs2=(n,r,t)=>function(...o){return n(r,t,o)},curryArgs3=function(n,r,t,o){return r==__?curryArgs3ResolveArgs0(n,t,o):t==__?curryArgs3ResolveArgs1(n,r,o):curryArgs3ResolveArgs2(n,r,t)},switchCase=(...n)=>{const r=n.pop();return areAllValuesNonfunctions(r)?nonfunctionsConditional(r,-2):0==n.length?curryArgs3(arrayConditional,r,__,-2):areAnyValuesPromises(n)?promiseAll(n).then(curry3(arrayConditional,r,__,-2)):arrayConditional(r,n,-2)};export default switchCase;
