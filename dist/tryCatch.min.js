/**
 * rubico v2.4.0
 * https://github.com/a-synchronous/rubico
 * (c) 2019-2024 Richard Tong
 * rubico may be freely distributed under the MIT license.
 */

!function(n,t){"object"==typeof module?module.exports=t:"function"==typeof define?define((()=>t)):n.tryCatch=t}("object"==typeof globalThis?globalThis:this,function(){"use strict";const n=n=>null!=n&&"function"==typeof n.then,t=Promise.all.bind(Promise),o=Symbol.for("placeholder"),e=function(n,t,e,r){return t==o?((n,t,o)=>function(e){return n(e,t,o)})(n,e,r):e==o?((n,t,o)=>function(e){return n(t,e,o)})(n,t,r):((n,t,o)=>function(e){return n(t,o,e)})(n,t,e)},r=function(n,t,o){return n(t,...o)},u=function(t,u,c){try{const i=t(...c);return n(i)?i.catch(e(r,u,o,c)):i}catch(n){return u(n,...c)}};return function(...r){if(r.length>2){const c=r.pop(),i=r.pop();return function(t){const o=t.length;let e=-1;for(;++e<o;){const o=t[e];if(n(o))return!0}return!1}(r)?t(r).then(e(u,i,c,o)):u(i,c,r)}const c=r[0],i=r[1];return function(...n){return u(c,i,n)}}}());
